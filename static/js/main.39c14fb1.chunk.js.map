{"version":3,"sources":["code.jpg","senaga.png","components/Header.js","components/Home.js","components/AboutMe.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Navbar","fixed","bg","variant","Brand","href","Collapse","id","className","Nav","Link","Home","Image","src","back","AboutMe","Card","Body","Row","Col","xs","md","logo","width","roundedCircle","Title","target","rel","class","Text","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+GAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,+KCqB5BC,MAjBf,WACI,OACI,kBAACC,EAAA,EAAD,CAAQC,MAAM,MAAMC,GAAG,OAAOC,QAAQ,QAClC,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,SAAnB,MACA,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,wBAAwBC,UAAU,uBAClD,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAIC,KAAL,CAAUL,KAAK,YAAf,YACA,kBAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,cAAf,aACA,kBAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,eAAf,cACA,kBAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,eAAf,UACA,kBAACI,EAAA,EAAIC,KAAL,CAAUL,KAAK,eAAf,gB,yBCGLM,MAZf,WACI,OACI,yBAAKH,UAAU,iBAAiBD,GAAG,QAC/B,kBAACK,EAAA,EAAD,CAAOC,IAAKC,IAAMN,UAAU,SAC5B,yBAAKA,UAAU,SACf,iDACA,oE,yCCmCGO,MAzCf,WACE,OACI,yBAAKR,GAAG,WACV,kBAACS,EAAA,EAAD,CAAOR,UAAU,WACjB,kBAACQ,EAAA,EAAKC,KAAN,KACI,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZ,kBAACT,EAAA,EAAD,CAAOC,IAAKS,IAAMC,MAAM,MAAMC,eAAa,KAE/C,kBAACL,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACZ,kBAACL,EAAA,EAAKS,MAAN,CAAYjB,UAAU,QAClB,0CACA,uBAAGkB,OAAO,SAAUC,IAAI,sBAAsBtB,KAAK,+CAA8C,uBAAGG,UAAU,6BAC9G,uBAAGkB,OAAO,SAAUC,IAAI,sBAAsBtB,KAAK,kCAAiC,uBAAGuB,MAAM,wBAC7F,uBAAGF,OAAO,SAAUC,IAAI,sBAAsBtB,KAAK,uCAAsC,uBAAGuB,MAAM,0BAEtG,kBAACZ,EAAA,EAAKa,KAAN,KACA,qdAMA,4WAMA,8DClBGC,MAVf,WACE,OACE,yBAAKtB,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCcuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.39c14fb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/code.bff04d32.jpg\";","module.exports = __webpack_public_path__ + \"static/media/senaga.484b8587.png\";","import React from 'react';\r\nimport '../App.css';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\n\r\nfunction Header(){\r\n    return (\r\n        <Navbar fixed='top' bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#Home\">SV</Navbar.Brand>\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\" className='justify-content-end'>\r\n                <Nav>\r\n                    <Nav.Link href=\"#AboutMe\">About Me</Nav.Link>\r\n                    <Nav.Link href=\"#Education\">Education</Nav.Link>\r\n                    <Nav.Link href=\"#Experience\">Experience</Nav.Link>\r\n                    <Nav.Link href=\"#Experience\">Skills</Nav.Link>\r\n                    <Nav.Link href=\"#Experience\">Projects</Nav.Link>\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../App.css';\r\nimport {Image} from 'react-bootstrap';\r\nimport back from '../code.jpg'\r\n\r\nfunction Home(){\r\n    return (\r\n        <div className='JobDescription' id=\"Home\">\r\n            <Image src={back} className='Home'/>\r\n            <div className='title'>\r\n            <h2>Senaga Velupillai</h2>\r\n            <h4>Software Engineer | Web Developer</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport '../App.css';\r\nimport {Image, Card, Col, Row} from 'react-bootstrap';\r\nimport logo from '../senaga.png';\r\n\r\nfunction AboutMe() {\r\n  return (\r\n      <div id=\"AboutMe\">\r\n    <Card  className=\"AboutMe\">\r\n    <Card.Body>\r\n        <Row>\r\n        <Col xs={4} md={4}>\r\n            <Image src={logo} width=\"70%\" roundedCircle/>\r\n        </Col>\r\n        <Col xs={8} md={8}>\r\n            <Card.Title className=\"mt-4\">\r\n                <span>About Me</span>\r\n                <a target=\"_blank\"  rel=\"noopener noreferrer\" href=\"https://ca.linkedin.com/in/senagavelupillai\"><i className=\"fab fa-linkedin-in ml-4\"></i></a>\r\n                <a target=\"_blank\"  rel=\"noopener noreferrer\" href=\"https://github.com/svelupillai\"><i class=\"fab fa-github ml-2\"></i></a>\r\n                <a target=\"_blank\"  rel=\"noopener noreferrer\" href=\"mailto:senagav@gmail.com?Subject=Hi\"><i class=\"fa fa-envelope ml-2\"></i></a>\r\n            </Card.Title>\r\n            <Card.Text>\r\n            <p>\r\n                I graduated from Concordia with a bachelors of software engineering with honours.\r\n                I have a strong passion for full stack web development and have been since the start of my software adventure.\r\n                I have experience going through the entire life cycle of shipping features - from gathering requirements to testing.\r\n                Currently, I am working as a software developer at Genetec, adding to their ever growing products and fine tuning my OOP skills. \r\n            </p>\r\n            <p>\r\n                Problem solving is the main reason as to why I even went into computer science! \r\n                Thus, I love to solve large problems with easy, maintainable, and resuable solutions.\r\n                I am experienced in modern web frameworks - my favourite being React.\r\n                I am highly motivated and am constantly looking to sharpen my existing skills and learn new ones.\r\n            </p>\r\n            <p>\r\n                Feel free to contact me!\r\n            </p>\r\n            </Card.Text>\r\n        </Col>\r\n        </Row>\r\n    </Card.Body>\r\n    </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\nimport '../App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport AboutMe from './AboutMe';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Home/>\n      <AboutMe />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}